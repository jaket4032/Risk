name: CI

on:
  push:
    branches: [ stable, workflow-improvements ]
  pull_request:
    branches: [ stable ]

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: "-D warnings -W unreachable-pub -W rust-2021-compatibility"
  RUSTDOCFLAGS: -Dwarnings
  RUSTUP_MAX_RETRIES: 10
  RUST_BACKTRACE: full
  CI: 1
  CARGO_NET_RETRY: 10
  CARGO_INCREMENTAL: 0
  REGISTRY: ghcr.io
  IMAGE_NAME: risk_site

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: apt update
      run: sudo apt update
    - name: apt install libsystemd-dev
      run: sudo apt install -y --no-install-recommends libsystemd-dev
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: nightly
        override: true
    - name: Cache Dependencies
      uses: Swatinem/rust-cache@ce325b60658c1b38465c06cc965b79baf32c1e72
    - name: Build
      run: cargo test --no-run --all-targets --features default,risk_discord,risk_groupme,risk_image,risk_reddit,risk_captcha
    - name: Run tests
      run: cargo test --all-targets --features default,risk_discord,risk_groupme,risk_image,risk_reddit,risk_captcha
    - name: Install Clippy
      run: rustup component add clippy --toolchain nightly-x86_64-unknown-linux-gnu
    - name: Clippy
      run: cargo +nightly clippy --all-targets --features default,risk_discord,risk_groupme,risk_image,risk_reddit,risk_captcha

  fmt:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Fmt
      run: cargo fmt -- --check

  docker:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: apt update
      run: sudo apt update
    - name: apt install libsystemd-dev
      run: sudo apt install -y --no-install-recommends libsystemd-dev
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: nightly
        override: true
    - name: Cache Dependencies
      uses: Swatinem/rust-cache@ce325b60658c1b38465c06cc965b79baf32c1e72
    - name: Build
      run: cargo build --all-targets --features default,risk_discord,risk_groupme,risk_image,risk_reddit,risk_captcha
    - name: Log in to the Container registry
      uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GHCR_PAT }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

    - name: Build and push Docker image
      uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
      with:
        context: .
        push: ${{ github.ref == 'refs/heads/stable' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
